// Generated by gir (https://github.com/gtk-rs/gir @ b2a1c6f9b362)
// from ../misc (@ ???)
// DO NOT EDIT

use crate::polkit;
use crate::{Listener, ffi};
use glib::{prelude::*, translate::*};

#[doc(alias = "polkit_agent_register_listener")]
pub fn register_listener(
    listener: &impl IsA<Listener>,
    subject: &impl IsA<polkit::Subject>,
    object_path: &str,
) -> Result<(), glib::Error> {
    unsafe {
        let mut error = std::ptr::null_mut();
        let is_ok = ffi::polkit_agent_register_listener(
            listener.as_ref().to_glib_none().0,
            subject.as_ref().to_glib_none().0,
            object_path.to_glib_none().0,
            &mut error,
        );
        debug_assert_eq!(is_ok == glib::ffi::GFALSE, !error.is_null());
        if error.is_null() {
            Ok(())
        } else {
            Err(from_glib_full(error))
        }
    }
}
